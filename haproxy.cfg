global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # Default SSL material locations
        ca-base /etc/ssl/certs
        crt-base /etc/ssl/private

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http
########################################################################################################
frontend media
    bind *:80
    bind *:443 ssl crt /etc/ssl/star.example.com.pem crt /etc/ssl/sambucaman.nl.pem alpn h2,http/1.1

    mode http
# Note that haproxy requires you to concatenate the certificate and key into a single file
# Uncomment the appropriate lines after you have acquired a SSL Certificate
#
#  HAProxy <1.7
#    bind *:443 ssl crt /etc/ssl/DOMAIN_NAME.pem
#
#  HAProxy >1.8
#    bind *:443 ssl crt /etc/ssl/DOMAIN_NAME.pem alpn h2,http/1.1
#    redirect scheme https if !{ ssl_fc }
#
# Uncomment these lines to allow LetsEncrypt authentication
#    redirect scheme https code 301 if !{ ssl_fc }

    acl letsencrypt_auth path_beg /.well-known/acme-challenge/
    use_backend letsencrypt if letsencrypt_auth
########################################################################################################
    acl jellyfin_server hdr(host) -i jellyfin.example.com
    acl jellyseerr_server hdr(host) -i jellyseerr.example.com
    acl sambucaman_server hdr(host) -i sambucaman.nl www.sambucaman.nl
########################################################################################################
    use_backend jellyfin if jellyfin_server
    use_backend jellyseerr if jellyseerr_server
    use_backend sambucaman if sambucaman_server
########################################################################################################
backend jellyfin
    option httpchk
    option forwardfor
    http-check send meth GET uri /health
    http-check expect string Healthy
    server jellyfin 192.168.1.12:8096
########################################################################################################
backend jellyseerr
    option httpchk
    option forwardfor
    http-check send meth GET uri /health
    http-check expect string Healthy
    server jellyseerr 192.168.1.12:5055
########################################################################################################
backend sambucaman
    option httpchk
    option forwardfor
    http-check send meth GET uri /health
    http-check expect string Healthy
    http-request set-header Host %[req.hdr(host)]
    http-request set-header X-Real-IP %[src]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    http-request add-header X-Forwarded-For %[src]
    server sambucaman 192.168.1.2:80

backend letsencrypt
    server letsencrypt 127.0.0.1:8888

########################################################################################################